<Window x:Class="PricingWPFDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:TreeView="clr-namespace:Seekford.Controls.WPFTreeListView;assembly=Seekford.Controls.WPFTreeListView"
        xmlns:Local="clr-namespace:PricingWPFDemo"
        Title="Pricing Demo" Height="350" Width="525">
    <Window.Resources>
        <ResourceDictionary>
           
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <Local:TreeViewDemoViewModel/>
    </Window.DataContext>

    <Grid>
        <TreeView:TreeListView Name="MySampleTree"
                                    Margin="1"                                    
                                    AlternationCount="2"
                                    AutoExpand="True"                                    
                                    Filter="{Binding }"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    ModelSource="{Binding TreeRoot}"
                                    NoRowsDefaultMessage="{Binding NoRowsDefaultMessage}"
                                    SelectedItem="{Binding SelectedNode,
                                                           Mode=TwoWay}"
                                    SetFocus="True"
                                    TextOptions.TextFormattingMode="Display"
                                    TextOptions.TextRenderingMode="ClearType"
                                    UseTreeNodeContext="True">
            <TreeView:TreeListView.Resources>
                <Style TargetType="{x:Type TreeView:TreeListViewItem}" >
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex"
                                         Value="0">
                            <Setter Property="Background"
                                            Value="WhiteSmoke"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView:TreeListView.Resources>
            <TreeView:TreeListView.View>
                <GridView ColumnHeaderContextMenu="{DynamicResource GridViewColumnHeaderContextMenu}">
                    <GridView.Columns>

                        <GridViewColumn 
                                            TreeView:TreeListView.DefaultWidth="392"
                                            TreeView:TreeListView.StateKey="PrimaryColumn">
                            <GridViewColumn.HeaderContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </GridViewColumn.HeaderContainerStyle>
                            <GridViewColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Name" ToolTip="Main Column" />
                                </DataTemplate>
                            </GridViewColumn.HeaderTemplate>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid DataContext="{Binding TreeModel}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TreeView:RowExpander Grid.Column="0" />
                                        <Label Grid.Column="2"
                                            Content="{Binding DisplayName}"
                                                               Focusable="True"
                                                               IsTabStop="True"
                                                                />
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Price"
                                            TreeView:TreeListView.DefaultWidth="75"
                                            TreeView:TreeListView.StateKey="Price">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <!-- This column has specific UI element for our different object types
                                    So, to aid in this and avoid binding issues and allow for a more efficient data display
                                    we use our data type control selector. This is an optimized template selector.
                                    Put in the different datatemplates.
                                    
                                    If you use base classes, use the more specific classes template first. The template selector will
                                    look to see if the class is a subclass and will use the first matching template. Order is important.
                                    If no match is found, then the template is null. Which is fine.
                                    -->
                                    <TreeView:DataTypeControlSelector>
                                        <DataTemplate DataType="{x:Type Local:ProductTreeModel}">
                                            <TextBlock Text="{Binding TreeModel.Price}"/>
                                        </DataTemplate>
                                    </TreeView:DataTypeControlSelector>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>                      
                    </GridView.Columns>
                </GridView>
            </TreeView:TreeListView.View>
        </TreeView:TreeListView>
    </Grid>
</Window>

