<Window x:Class="DataGridTemplateSample.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:toolkit="http://schemas.microsoft.com/wpf/2008/toolkit"
	xmlns:local="clr-namespace:DataGridTemplateSample"
    Title="{Binding Source={x:Static local:DataProvider.Database}, StringFormat=DataGridTemplateSample - \{0\}}"
	Loaded="Window_Loaded" Closing="Window_Closing"
	Height="620" Width="925">
	<Window.Resources>
		<!-- ContextMenus -->
		<ContextMenu x:Key="columnHeaderMenu">
			<ContextMenu.CommandBindings>
				<CommandBinding
					Command="{x:Static ApplicationCommands.Copy}"
					CanExecute="CommandBinding_CanExecute"
					Executed="Column_CommandBinding_Executed" />
			</ContextMenu.CommandBindings>
			<MenuItem Command="ApplicationCommands.Copy">
				<MenuItem.Icon>
					<Image Source="Resources\copy.png"/>
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>
		
		<ContextMenu x:Key="rowHeaderMenu">
			<ContextMenu.CommandBindings>
				<CommandBinding
					Command="{x:Static ApplicationCommands.Copy}"
					CanExecute="CommandBinding_CanExecute"
					Executed="Row_CommandBinding_Executed" />
			</ContextMenu.CommandBindings>
			<MenuItem Command="ApplicationCommands.Copy">
				<MenuItem.Icon>
					<Image Source="Resources\copy.png"/>
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>
		
		<ContextMenu x:Key="cellMenu">
			<MenuItem Command="ApplicationCommands.Copy">
				<MenuItem.Icon>
					<Image Source="Resources\copy.png"/>
				</MenuItem.Icon>
			</MenuItem>
		</ContextMenu>
		
		<!-- styles -->
		<Style x:Key="ColumnHeaderStyle" TargetType="{x:Type toolkit:DataGridColumnHeader}">
			<Setter Property="ContextMenu" Value="{StaticResource columnHeaderMenu}" />
		</Style>
		<Style x:Key="RowHeaderStyle" TargetType="{x:Type toolkit:DataGridRowHeader}">
			<Setter Property="ContextMenu" Value="{StaticResource rowHeaderMenu}" />
		</Style>
		<Style x:Key="CellStyle" TargetType="{x:Type toolkit:DataGridCell}">
			<Setter Property="ContextMenu" Value="{StaticResource cellMenu}" />
		</Style>
		<Style TargetType="{x:Type TextBox}">
			<Setter Property="ContextMenu" Value="{StaticResource textBoxMenu}" />
		</Style>
		
		<!-- datagrid lock edit style -->
		<Style TargetType="{x:Type toolkit:DataGridRow}">
			<Style.Triggers>
				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsEditingRow}" Value="True" />
						<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEditing}" Value="False" />
					</MultiDataTrigger.Conditions>
					<Setter Property="IsEnabled" Value="False"/>
					<Setter Property="Foreground" Value="LightGray"/>
				</MultiDataTrigger>
			</Style.Triggers>
		</Style>

		<!-- converters -->
		<local:UnixTimeStampConverter x:Key="stampConverter" />
		<local:GeneralLinkConverter x:Key="linkConverter" />
		<local:ItemStatusConverter x:Key="statusConverter" />
		
		<!-- column templates -->
		<DataTemplate x:Key="GenericCellTemplate">
			<TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}">
				<TextBlock.Style>
					<Style TargetType="TextBlock">
						<Style.Resources>
							<ResourceDictionary/>
						</Style.Resources>
						<Setter Property="FrameworkElement.Margin">
							<Setter.Value>
								<Thickness>2,0,2,0</Thickness>
							</Setter.Value>
						</Setter>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</DataTemplate>

		<DataTemplate x:Key="StatusCellTemplate">
			<TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource statusConverter}}">
				<TextBlock.Style>
					<Style TargetType="TextBlock">
						<Style.Resources>
							<ResourceDictionary/>
						</Style.Resources>
						<Setter Property="FrameworkElement.Margin">
							<Setter.Value>
								<Thickness>2,0,2,0</Thickness>
							</Setter.Value>
						</Setter>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</DataTemplate>

		<DataTemplate x:Key="TimeStampCellTemplate">
			<TextBlock>
				<TextBlock.Text>
					<Binding
						Path="Content" 
						RelativeSource="{RelativeSource TemplatedParent}" 
						Converter="{StaticResource stampConverter}"
						StringFormat="{}{0:yyyy/MM/dd}" />
				</TextBlock.Text>
				<TextBlock.Style>
					<Style TargetType="TextBlock">
						<Style.Resources>
							<ResourceDictionary/>
						</Style.Resources>
						<Setter Property="FrameworkElement.Margin">
							<Setter.Value>
								<Thickness>2,0,2,0</Thickness>
							</Setter.Value>
						</Setter>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</DataTemplate>

		<!-- CellTemplate for hyperlink -->
		<DataTemplate x:Key="HttpHyperCellTemplate">
			<TextBlock>
				<TextBlock.Style>
					<Style TargetType="TextBlock">
						<Style.Resources>
							<ResourceDictionary/>
						</Style.Resources>
						<Setter Property="FrameworkElement.Margin">
							<Setter.Value>
								<Thickness>2,0,2,0</Thickness> 
							</Setter.Value>
						</Setter>
					</Style>
				</TextBlock.Style>
				<!-- add MouseRightButtonUp to allow DataGridCell context menu -->
				<Hyperlink NavigateUri="{Binding Converter={StaticResource linkConverter}, ConverterParameter='http'}"
						   MouseRightButtonUp="Hyperlink_MouseRightButtonUp"
						   Click="Hyperlink_Click"
						   MouseEnter="Hyperlink_MouseEnter"
						   MouseLeave="Hyperlink_MouseLeave">
					<TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
				</Hyperlink>
			</TextBlock>
		</DataTemplate>

		<DataTemplate x:Key="CellEditTemplate">
			<TextBox ContextMenu="{StaticResource textBoxMenu}" BorderThickness="0" Padding="0">
				<TextBox.Text>
					<Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
				</TextBox.Text>
			</TextBox>
		</DataTemplate>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" MinHeight="30" />
			<RowDefinition Height="120*" />
			<RowDefinition Height="Auto" MinHeight="5" />
			<RowDefinition Height="437*" />
			<RowDefinition Height="Auto" MinHeight="23" />
		</Grid.RowDefinitions>

		<!-- SQL input -->
		<TextBox Name="textBox1" Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AcceptsTab="True" AcceptsReturn="True" AutoWordSelection="True" />

		<!-- datagrid -->
		<toolkit:DataGrid x:Name="dataGrid1" Grid.Row="3"
						  AutoGenerateColumns="True"
						  Background="Transparent" SelectionUnit="CellOrRowHeader"
						  ClipboardCopyMode="None"
						  RowHeaderWidth="25"
						  RowEditEnding="dataGrid1_RowEditEnding"
						  PreviewKeyDown="dataGrid1_PreviewKeyDown"
						  BeginningEdit="dataGrid1_BeginningEdit"
						  CellEditEnding="dataGrid1_CellEditEnding"
						  ContextMenuOpening="dataGrid1_ContextMenuOpening"
						  ContextMenuClosing="dataGrid1_ContextMenuClosing"
						  ColumnHeaderStyle="{StaticResource ColumnHeaderStyle}"
						  RowHeaderStyle="{StaticResource RowHeaderStyle}"
						  CellStyle="{StaticResource CellStyle}">
			<toolkit:DataGrid.CommandBindings>
				<CommandBinding
					Command="{x:Static ApplicationCommands.Copy}"
					CanExecute="CommandBinding_CanExecute"
					Executed="Cell_CommandBinding_Executed" />
			</toolkit:DataGrid.CommandBindings>
			<local:GenerateTemplateColumn.Columns>
				<local:AutoGenerateColumn Column="ItemCreatedStamp"
										  CellTemplate="{StaticResource TimeStampCellTemplate}"
										  CellEditingTemplate="{StaticResource CellEditTemplate}"
										  Binding="{Binding Path=ItemCreatedStamp}"/>
				<local:AutoGenerateColumn Column="ItemUpdatedStamp"
										  CellTemplate="{StaticResource TimeStampCellTemplate}"		
										  CellEditingTemplate="{StaticResource CellEditTemplate}"
										  Binding="{Binding Path=ItemUpdatedStamp}"/>
				<local:AutoGenerateColumn Column="ItemLink"
										  CellTemplate="{StaticResource HttpHyperCellTemplate}"
										  CellEditingTemplate="{StaticResource CellEditTemplate}"
										  Binding="{Binding Path=ItemLink}"/>

				<local:AutoGenerateColumn Column="ItemStatusId"
										  CellTemplate="{StaticResource StatusCellTemplate}"
										  CellEditingTemplate="{StaticResource CellEditTemplate}"
										  Binding="{Binding Path=ItemStatusId}" />
			</local:GenerateTemplateColumn.Columns>
		</toolkit:DataGrid>

		<!-- -->
		<GridSplitter Grid.Row="2"
					  Background="#ffe9eeee"
					  HorizontalAlignment="Stretch"
					  VerticalAlignment="Center"
					  ShowsPreview="True"
					  Height="20">
		</GridSplitter>
		<Image VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stretch="None" Grid.Row="2">
			<Image.Source>
				<DrawingImage PresentationOptions:Freeze="True">
					<DrawingImage.Drawing>
						<GeometryDrawing>
							<GeometryDrawing.Geometry>
								<GeometryGroup>
									<LineGeometry StartPoint="0,3" EndPoint="50,3"></LineGeometry>
									<LineGeometry StartPoint="0,6" EndPoint="50,6"></LineGeometry>
								</GeometryGroup>
							</GeometryDrawing.Geometry>
							<GeometryDrawing.Pen>
								<Pen Thickness="1" Brush="#a0a0a0" />
							</GeometryDrawing.Pen>
						</GeometryDrawing>
					</DrawingImage.Drawing>
				</DrawingImage>
			</Image.Source>
		</Image>

		<!-- toolbar -->

		<ToolBar VerticalAlignment="Top" Height="30"  Grid.Row="0">
			<Button Name="SelectDbButton" Height="24" Click="SelectDatabase_Click">
				<TextBlock Margin="1">Select database</TextBlock>
			</Button>
			<Button Name="ExecuteSqlButton" Height="24" Click="ExecuteSQL_Click">
				<StackPanel Orientation="Horizontal">
					<Image Margin="3">
						<Image.Source>
							<DrawingImage>
								<DrawingImage.Drawing>
									<GeometryDrawing Geometry="M 0 0 L 200 150 0 300 Z" Brush="LimeGreen">
										<GeometryDrawing.Pen>
											<Pen Brush="LimeGreen" Thickness="1" />
										</GeometryDrawing.Pen>
									</GeometryDrawing>
								</DrawingImage.Drawing>
							</DrawingImage>
						</Image.Source>
					</Image>
					<TextBlock Margin="1">Execute</TextBlock>
				</StackPanel>
			</Button>
		</ToolBar>

		<!-- status bar -->
		<StatusBar Height="23" Name="statusBar1" VerticalAlignment="Bottom" Grid.Row="4">
			<StatusBar.ItemsPanel>
				<ItemsPanelTemplate>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="200"/>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="200"/>
						</Grid.ColumnDefinitions>
					</Grid>
				</ItemsPanelTemplate>
			</StatusBar.ItemsPanel>
			<StatusBarItem>
				<TextBlock Name="statusLabel1">Ready</TextBlock>
			</StatusBarItem>
			<StatusBarItem Grid.Column="1">
				<TextBlock Name="statusLabel2"></TextBlock>
			</StatusBarItem>
			<StatusBarItem Grid.Column="2">
				<TextBlock Name="statusLabel3"></TextBlock>
			</StatusBarItem>
		</StatusBar>
	</Grid>
</Window>
